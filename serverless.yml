service: test-task-perfsys
frameworkVersion: '3'
custom:
  accountId: 938668680897
  region: "eu-central-1"

provider:
  name: aws
  runtime: python3.11
  region: ${self:custom.region}
  stage: dev
  deploymentPrefix: perfsys
  iamRoleStatements:
    - Effect: Allow
      Action: logs:CreateLogGroup
      Resource: "arn:aws:logs:${self:custom.region}:${self:custom.accountId}:*"
    - Effect: Allow
      Action:
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource:
        - "arn:aws:logs:${self:custom.region}:${self:custom.accountId}:log-group:/aws/lambda/CreateFileLambda:*"
        - "arn:aws:logs:${self:custom.region}:${self:custom.accountId}:log-group:/aws/lambda/ProcessFileLambda:*"
        - "arn:aws:logs:${self:custom.region}:${self:custom.accountId}:log-group:/aws/lambda/MakeCallbackLambda:*"
    - Effect: Allow
      Action: textract:DetectDocumentText
      Resource: "arn:aws:lambda:${self:custom.region}:${self:custom.accountId}:function:test-task-perfsys-${self:provider.stage}-ProcessFileLambda"
    - Effect: Allow
      Action: s3:GetObject
      Resource:
        - "arn:aws:s3:::perfsys-storage-dev-bucket/*"
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: "arn:aws:dynamodb:${self:custom.region}:${self:custom.accountId}:table/files-table"
    # Add the provided policy for MakeCallbackLambda
    - Effect: Allow
      Action: dynamodb:GetRecords
      Resource:
        - "arn:aws:logs:${self:custom.region}:${self:custom.accountId}:*"
        - "arn:aws:logs:${self:custom.region}:${self:custom.accountId}:log-group:/aws/lambda/MakeCallbackLambda:*"
        - "arn:aws:dynamodb:${self:custom.region}:${self:custom.accountId}:table/files-table/stream/*"


functions:
  createFileLambda:
    handler: create_file/lambda_handler.handle
    environment:
      DYNAMODB_TABLE_NAME: "files-table"
      BUCKET_NAME: "perfsys-storage-dev-bucket"
      REGION_NAME: "${self:custom.region}"
    events:
      - http:
          path: files
          method: post

  ProcessFileLambda:
    handler: process_file/lambda_handler.handle
    environment:
      DYNAMODB_TABLE_NAME: "files-table"
      REGION_NAME: "${self:custom.region}"
    events: # Add an S3 event trigger
      - s3:
          bucket: perfsys-storage-dev-bucket
          event: s3:ObjectCreated:*

  MakeCallbackLambda:
    handler: make_callback/lambda_handler.handle
#    events: # Add a DynamoDB event trigger
#      - stream:
#          type: dynamodb
#          arn: arn:aws:dynamodb:${self:custom.region}:${self:custom.accountId}:table/files-table/stream/*

resources:
  Resources:
    ProxyResource:
      Type: AWS::ApiGateway::Resource
      Properties:
        RestApiId:
          Ref: ApiGatewayRestApi
        ParentId:
          Fn::GetAtt:
            - "ApiGatewayRestApi"
            - "RootResourceId"
        PathPart: "getfiles"
    ProxyMethod:
      Type: AWS::ApiGateway::Method
      Properties:
        HttpMethod: "GET"
        ResourceId:
          Ref: ProxyResource
        RestApiId:
          Ref: ApiGatewayRestApi
        AuthorizationType: "NONE"  # Set to "NONE" for public access
        Integration:
          Type: HTTP
          IntegrationHttpMethod: GET
          Uri: "https://perfsys-storage-dev-bucket.s3.amazonaws.com/{file_id}"
          IntegrationResponses:
            - StatusCode: 200
